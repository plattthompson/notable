{"version":3,"sources":["components/Header.js","components/Add.js","components/Delete.js","components/Save.js","components/Titles.js","components/Note.js","App.js","index.js"],"names":["Header","className","Add","props","onClick","addNote","aria-label","Delete","deleteNote","Save","saveChanges","Titles","renderTitles","Note","value","renderNote","onChange","event","saveTextArea","placeholder","App","state","currentNote","id","title","text","allNotes","Object","values","map","note","selectNote","saveTitle","defaultValue","toString","updatedCurrentNote","setState","currentNoteId","currentNoteTitle","currentNoteText","target","prevState","currentText","getAllNotes","Math","floor","random","newNote","allNotesObjects","allNotesNoQuotes","JSON","stringify","replace","query","fetch","method","headers","body","then","res","json","console","log","catch","error","allNotesUpdated","currentId","obj","data","notes","array","reduce","this","autoSave","setInterval","clearInterval","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a14f24f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t\t<h1>NoteWorthy</h1>\n\t\t</div>\n\t);\n}\n\nexport default Header;","import React from 'react';\n\nconst Add = (props) => {\n\treturn (\n\t\t<div className=\"add\">\n\t\t\t<i onClick={ props.addNote } className=\"fas fa-plus-circle fa-lg icon\" aria-label=\"Add\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Add;","import React from 'react';\n\nconst Delete = (props) => {\n\treturn (\n\t\t<div className=\"delete\">\n\t\t\t<i onClick={ props.deleteNote } className=\"fas fa-trash-alt fa-lg icon\" aria-label=\"Delete\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Delete;","import React from 'react';\n\nconst Save = (props) => {\n\treturn (\n\t\t<div className=\"save\">\n\t\t\t<i onClick={ props.saveChanges } className=\"far fa-save fa-lg icon\" aria-label=\"Save\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Save;","import React from 'react';\n\nconst Titles = (props) => {\n\treturn (\n\t\t<div className=\"menu\">\n\t\t\t<ul className=\"note-titles\">\n\t\t\t\t{ props.renderTitles }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default Titles;","import React from 'react';\n\nconst Note = (props) => {\n\treturn (\n\t\t<div className=\"note-div\">\n\t\t\t<textarea \n\t\t\t\tvalue={ props.renderNote } \n\t\t\t\tonChange={ (event) => props.saveTextArea(event) }\n\t\t\t\tclassName=\"note-box\" \n\t\t\t\tplaceholder=\"Create your note here\" />\n\t\t</div>\n\t);\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport Add from './components/Add.js';\nimport Delete from './components/Delete.js';\nimport Save from './components/Save.js'\nimport Titles from './components/Titles.js';\nimport Note from './components/Note.js';\n\nclass App extends Component {\n\tstate = {\n\t\tcurrentNote: {\n\t\t\tid: null,\n\t\t\ttitle: \"\",\n\t\t\ttext: \"\"\n\t\t},\n\t\tallNotes: {\n\t\t}\n\t}\n\n\t// When app loads, notes are retrieved from API and state is updated\n\tcomponentDidMount() {\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: '{ notes { id title text } }'\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(obj => obj.data.notes)\n\t\t.then(array => array.reduce((notes, note) => {\n\t\t\tnotes[note.id] = note;\n\t\t\treturn notes;\n\t\t}, {}))\n\t\t.then(notes => this.setState({ allNotes: notes }))\n\t\t.catch(error => console.error(error));\n\n\t\t// Timer for autosave every two minutes\n\t\tthis.autoSave = setInterval(this.saveChanges, 2 * 60 * 1000);\n\t}\n\n\t// Clearing autosave function in case of unmount\n\tcomponentWillUnmount () {\n\t\tclearInterval(this.autoSave);\n\t}\n\n\t// Dynamically renders titles from state\n\trenderTitles = () => {\n\t\treturn ( Object.values(this.state.allNotes).map(note => \n\t\t\t<li onClick={ () => this.selectNote(note.id) } \n\t\t\t\tkey={ note.id.toString() }>\n\t\t\t\t\t<input onChange={ (event) => this.saveTitle(event) }\n\t\t\t\t\t\tclassName=\"title-box\"  \n\t\t\t\t\t\tdefaultValue={ note.title }\n\t\t\t\t\t\tid={ note.id } />\n\t\t\t</li>\n\t\t\t)\n\t\t)\n\t}\n\n\t// Updates state.currentNote upon selection of title\n\tselectNote = (id) => {\n\t\tconst updatedCurrentNote = this.state.allNotes[id];\n\t\tthis.setState({ \n\t\t\tcurrentNote: updatedCurrentNote\n\t\t});\n\t}\n\n\t// Renders current note\n\trenderNote = () => {\n\t\treturn this.state.currentNote.text;\n\t}\n\n\t// Saves note content to state upon change OR creates new note if a note hasn't been selected yet\n\tsaveTextArea = (event) => {\n\t\tif (this.state.currentNote.id) {\n\t\t\tconst currentNoteId = this.state.currentNote.id;\n\t\t\tconst currentNoteTitle = this.state.currentNote.title;\n\t\t\tconst currentNoteText = event.target.value;\n\t\t\tthis.setState(prevState => ({ \n\t\t\t\tcurrentNote: { \n\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\ttext: currentNoteText\n\t\t\t\t},\n\t\t\t\tallNotes: {\n\t\t\t\t\t...prevState.allNotes,\n\t\t\t\t\t[currentNoteId]: {\n\t\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\t\ttext: currentNoteText\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.addNote();\n\t\t}\n\t}\n\n\t// Saves note title to state upon change\n\tsaveTitle = (event) => {\n\t\tconst currentNoteId = this.state.currentNote.id;\n\t\tconst currentNoteTitle = event.target.value;\n\t\tconst currentText = this.state.currentNote.text;\n\t\tthis.setState(prevState => ({ \n\t\t\tcurrentNote: { \n\t\t\t\tid: currentNoteId,\n\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\ttext: currentText\n\t\t\t},\n\t\t\tallNotes: {\n\t\t\t\t...prevState.allNotes,\n\t\t\t\t[currentNoteId]: {\n\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\ttext: currentText\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t// Makes shallow copy of state, creates a new note with a\n\t// Unix timestamp as an ID, adds the new note to the shallow\n\t// copy, and updates state with shallow copy\n\taddNote = () => {\n\t\tconst getAllNotes = {...this.state.allNotes};\n\t\tconst id = Math.floor(Math.random() * 10_000);\n\t\tconst newNote = { id: id, title: \"\", text: \"\" };\n\t\tgetAllNotes[id] = newNote;\n\t\tthis.setState({\n\t\t\tcurrentNote: {\n\t\t\t\tid: id,\n\t\t\t\ttitle: \"\",\n\t\t\t\ttext: \"\"\n\t\t\t},\n\t\t\tallNotes: getAllNotes\n\t\t});\n\t}\n\n\t// Creates shallow copy of state.allNotes, creates array of values\n\t// from shallow copy, then uses RegEx to remove quotes from id,\n\t// title, and text keys to conform to GraphQL query format. Uses\n\t// an upsert to modify database.\n\tsaveChanges = () => {\n\t\tconst allNotesObjects = Object.values({...this.state.allNotes});\n\t\tconst allNotesNoQuotes = JSON.stringify(allNotesObjects)\n\t\t\t.replace(/\"id\":/g, \"id:\")\n\t\t\t.replace(/\"title\":/g, \"title:\")\n\t\t\t.replace(/\"text\":/g, \"text:\");\n\t\tconst query = `mutation {\n\t\t\t\t\t  insert_notes(\n\t\t\t\t\t\tobjects: \n\t\t\t\t\t\t  ${allNotesNoQuotes}\n\t\t\t\t\t\t,\n\t\t\t\t\t\ton_conflict: {\n\t\t\t\t\t\t  constraint: notes_pkey\n\t\t\t\t\t\t  update_columns: [title, text]\n\t\t\t\t\t\t}\n\t\t\t\t\t  ) {\n\t\t\t\t\t\treturning {\n\t\t\t\t\t\t  id\n\t\t\t\t\t\t  title\n\t\t\t\t\t\t  text\n\t\t\t\t\t\t}\n\t\t\t\t\t  }\n\t\t\t\t\t}`;\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ query })\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(res => console.log(res))\n\t\t.catch(error => console.error(error));\n\t}\n\n\t// Makes shallow copy of state.allNotes, deletes note from shallow copy,\n\t// updates state.allNotes with shallow copy, and resets currentNote.\n\t// Then deletes note from database.\n\tdeleteNote = () => {\n\t\tconst allNotesUpdated = {...this.state.allNotes};\n\t\tconst currentId = this.state.currentNote.id;\n\t\tdelete allNotesUpdated[currentId];\n\t\tthis.setState({ \n\t\t\tcurrentNote: { \n\t\t\t\tid: null, \n\t\t\t\ttitle: \"\", \n\t\t\t\ttext: \"\" \n\t\t\t},\n\t\t\tallNotes: allNotesUpdated\n\t\t});\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: `mutation {\n\t\t\t\t\t\t\tdelete_notes(where: {id: {_eq: ${currentId}}}) {\n\t\t\t\t\t\t\t\taffected_rows\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(res => console.log(res))\n\t\t.catch(error => console.error(error));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"app-container background\">\n\t\t\t\t\t<Add addNote={ this.addNote } />\n\t\t\t\t\t<Save saveChanges={ this.saveChanges } />\n\t\t\t\t\t<Delete deleteNote={ this.deleteNote } />\n\t\t\t\t\t<Titles renderTitles={ this.renderTitles() } selectNote={ this.selectNote } saveTitle={ this.saveTitle } />\n\t\t\t\t\t<Note renderNote={ this.renderNote() } saveTextArea={ this.saveTextArea } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}