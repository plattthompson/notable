{"version":3,"sources":["components/Header.js","components/Add.js","components/Delete.js","components/Save.js","components/Titles.js","components/Note.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Add","props","onClick","addNote","aria-label","Delete","deleteNote","Save","saveChanges","Titles","renderTitles","Note","value","renderNote","onChange","event","saveTextArea","placeholder","App","state","currentNote","id","title","text","allNotes","Object","values","_this","map","note","selectNote","key","toString","saveTitle","defaultValue","updatedCurrentNote","setState","currentNoteId","currentNoteTitle","currentNoteText","target","prevState","objectSpread","defineProperty","currentText","getAllNotes","Date","now","newNote","allNotesObjects","allNotesNoQuotes","JSON","stringify","replace","query","concat","fetch","method","headers","Content-Type","body","then","res","json","console","log","catch","error","allNotesUpdated","currentId","_this2","this","obj","data","notes","array","reduce","autoSave","setInterval","clearInterval","components_Header","components_Add","components_Save","components_Delete","components_Titles","components_Note","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.905065f8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t\t<h1>NoteWorthy</h1>\n\t\t</div>\n\t);\n}\n\nexport default Header;","import React from 'react';\n\nconst Add = (props) => {\n\treturn (\n\t\t<div className=\"add\">\n\t\t\t<i onClick={ props.addNote } className=\"fas fa-plus-circle fa-lg icon\" aria-label=\"Add\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Add;","import React from 'react';\n\nconst Delete = (props) => {\n\treturn (\n\t\t<div className=\"delete\">\n\t\t\t<i onClick={ props.deleteNote } className=\"fas fa-trash-alt fa-lg icon\" aria-label=\"Delete\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Delete;","import React from 'react';\n\nconst Save = (props) => {\n\treturn (\n\t\t<div className=\"save\">\n\t\t\t<i onClick={ props.saveChanges } className=\"far fa-save fa-lg icon\" aria-label=\"Save\"></i>\n\t\t</div>\n\t);\n}\n\nexport default Save;","import React from 'react';\n\nconst Titles = (props) => {\n\treturn (\n\t\t<div className=\"menu\">\n\t\t\t<ul className=\"note-titles\">\n\t\t\t\t{ props.renderTitles }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default Titles;","import React from 'react';\n\nconst Note = (props) => {\n\treturn (\n\t\t<div className=\"note-div\">\n\t\t\t<textarea \n\t\t\t\tvalue={ props.renderNote } \n\t\t\t\tonChange={ (event) => props.saveTextArea(event) }\n\t\t\t\tclassName=\"note-box\" \n\t\t\t\tplaceholder=\"Create your note here\" />\n\t\t</div>\n\t);\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport Add from './components/Add.js';\nimport Delete from './components/Delete.js';\nimport Save from './components/Save.js'\nimport Titles from './components/Titles.js';\nimport Note from './components/Note.js';\n\nclass App extends Component {\n\tstate = {\n\t\tcurrentNote: {\n\t\t\tid: null,\n\t\t\ttitle: \"\",\n\t\t\ttext: \"\"\n\t\t},\n\t\tallNotes: {\n\t\t}\n\t}\n\n\t// When app loads, notes are retrieved from API and state is updated\n\tcomponentDidMount() {\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: '{ notes { id title text } }'\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(obj => obj.data.notes)\n\t\t.then(array => array.reduce((notes, note) => {\n\t\t\tnotes[note.id] = note;\n\t\t\treturn notes;\n\t\t}, {}))\n\t\t.then(notes => this.setState({ allNotes: notes }))\n\t\t.catch(error => console.error(error));\n\n\t\t// Timer for autosave every two minutes\n\t\tthis.autoSave = setInterval(this.saveChanges, 2 * 60 * 1000);\n\t}\n\n\t// Clearing autosave function in case of unmount\n\tcomponentWillUnmount () {\n\t\tclearInterval(this.autoSave);\n\t}\n\n\t// Dynamically renders titles from state\n\trenderTitles = () => {\n\t\treturn ( Object.values(this.state.allNotes).map(note => \n\t\t\t<li onClick={ () => this.selectNote(note.id) } \n\t\t\t\tkey={ note.id.toString() }>\n\t\t\t\t\t<input onChange={ (event) => this.saveTitle(event) }\n\t\t\t\t\t\tclassName=\"title-box\"  \n\t\t\t\t\t\tdefaultValue={ note.title }\n\t\t\t\t\t\tid={ note.id } />\n\t\t\t</li>\n\t\t\t)\n\t\t)\n\t}\n\n\t// Updates state.currentNote upon selection of title\n\tselectNote = (id) => {\n\t\tconst updatedCurrentNote = this.state.allNotes[id];\n\t\tthis.setState({ \n\t\t\tcurrentNote: updatedCurrentNote\n\t\t});\n\t}\n\n\t// Renders current note\n\trenderNote = () => {\n\t\treturn this.state.currentNote.text;\n\t}\n\n\t// Saves note content to state upon change OR creates new note if a note hasn't been selected yet\n\tsaveTextArea = (event) => {\n\t\tif (this.state.currentNote.id) {\n\t\t\tconst currentNoteId = this.state.currentNote.id;\n\t\t\tconst currentNoteTitle = this.state.currentNote.title;\n\t\t\tconst currentNoteText = event.target.value;\n\t\t\tthis.setState(prevState => ({ \n\t\t\t\tcurrentNote: { \n\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\ttext: currentNoteText\n\t\t\t\t},\n\t\t\t\tallNotes: {\n\t\t\t\t\t...prevState.allNotes,\n\t\t\t\t\t[currentNoteId]: {\n\t\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\t\ttext: currentNoteText\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.addNote();\n\t\t}\n\t}\n\n\t// Saves note title to state upon change\n\tsaveTitle = (event) => {\n\t\tconst currentNoteId = this.state.currentNote.id;\n\t\tconst currentNoteTitle = event.target.value;\n\t\tconst currentText = this.state.currentNote.text;\n\t\tthis.setState(prevState => ({ \n\t\t\tcurrentNote: { \n\t\t\t\tid: currentNoteId,\n\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\ttext: currentText\n\t\t\t},\n\t\t\tallNotes: {\n\t\t\t\t...prevState.allNotes,\n\t\t\t\t[currentNoteId]: {\n\t\t\t\t\tid: currentNoteId,\n\t\t\t\t\ttitle: currentNoteTitle,\n\t\t\t\t\ttext: currentText\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t// Makes shallow copy of state, creates a new note with a\n\t// Unix timestamp as an ID, adds the new note to the shallow\n\t// copy, and updates state with shallow copy\n\taddNote = () => {\n\t\tconst getAllNotes = {...this.state.allNotes};\n\t\tconst id = Date.now();\n\t\tconst newNote = { id: id, title: \"\", text: \"\" };\n\t\tgetAllNotes[id] = newNote;\n\t\tthis.setState({\n\t\t\tcurrentNote: {\n\t\t\t\tid: id,\n\t\t\t\ttitle: \"\",\n\t\t\t\ttext: \"\"\n\t\t\t},\n\t\t\tallNotes: getAllNotes\n\t\t});\n\t}\n\n\t// Creates shallow copy of state.allNotes, creates array of values\n\t// from shallow copy, then uses RegEx to remove quotes from id,\n\t// title, and text keys to conform to GraphQL query format. Uses\n\t// an upsert to modify database.\n\tsaveChanges = () => {\n\t\tconst allNotesObjects = Object.values({...this.state.allNotes});\n\t\tconst allNotesNoQuotes = JSON.stringify(allNotesObjects)\n\t\t\t.replace(/\"id\":/g, \"id:\")\n\t\t\t.replace(/\"title\":/g, \"title:\")\n\t\t\t.replace(/\"text\":/g, \"text:\");\n\t\tconst query = `mutation {\n\t\t\t\t\t  insert_notes(\n\t\t\t\t\t\tobjects: \n\t\t\t\t\t\t  ${allNotesNoQuotes}\n\t\t\t\t\t\t,\n\t\t\t\t\t\ton_conflict: {\n\t\t\t\t\t\t  constraint: notes_pkey\n\t\t\t\t\t\t  update_columns: [title, text]\n\t\t\t\t\t\t}\n\t\t\t\t\t  ) {\n\t\t\t\t\t\treturning {\n\t\t\t\t\t\t  id\n\t\t\t\t\t\t  title\n\t\t\t\t\t\t  text\n\t\t\t\t\t\t}\n\t\t\t\t\t  }\n\t\t\t\t\t}`;\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ query })\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(res => console.log(res))\n\t\t.catch(error => console.error(error));\n\t}\n\n\t// Makes shallow copy of state.allNotes, deletes note from shallow copy,\n\t// updates state.allNotes with shallow copy, and resets currentNote.\n\t// Then deletes note from database.\n\tdeleteNote = () => {\n\t\tconst allNotesUpdated = {...this.state.allNotes};\n\t\tconst currentId = this.state.currentNote.id;\n\t\tdelete allNotesUpdated[currentId];\n\t\tthis.setState({ \n\t\t\tcurrentNote: { \n\t\t\t\tid: null, \n\t\t\t\ttitle: \"\", \n\t\t\t\ttext: \"\" \n\t\t\t},\n\t\t\tallNotes: allNotesUpdated\n\t\t});\n\t\tfetch('https://noteworthy-graphql.herokuapp.com/v1/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: `mutation {\n\t\t\t\t\t\t\tdelete_notes(where: {id: {_eq: ${currentId}}}) {\n\t\t\t\t\t\t\t\taffected_rows\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`\n\t\t\t})\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(res => console.log(res))\n\t\t.catch(error => console.error(error));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"app-container background\">\n\t\t\t\t\t<Add addNote={ this.addNote } />\n\t\t\t\t\t<Save saveChanges={ this.saveChanges } />\n\t\t\t\t\t<Delete deleteNote={ this.deleteNote } />\n\t\t\t\t\t<Titles renderTitles={ this.renderTitles() } selectNote={ this.selectNote } saveTitle={ this.saveTitle } />\n\t\t\t\t\t<Note renderNote={ this.renderNote() } saveTextArea={ this.saveTextArea } />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}